<!-- launch : the world and the drone  -->  
<launch>
    <arg name="mav_name" default="hummingbird"/>
    <arg name="world_name" default="2D_50"/>
    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />
    <arg name="log_file" default="$(arg mav_name)" />
    <arg name="debug" default="false"/>
    <arg name="gui" default="false"/> <!-- Gazebo GUI -->
    <arg name="paused" default="false"/>
    <!-- The following line causes gzmsg and gzerr messages to be printed to the console -->
  	<arg name="verbose" default="true"/>
  	<arg name="perfect_sensing" default="true"/>
	
	<!-- Define env variables --> 
	<env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models:$(find avoidance_benchmark)/gazebo/models"/>
 	<env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
	
	<!-- Start the World -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find avoidance_benchmark)/gazebo/geometric_worlds/$(arg world_name).world" />
      <arg name="debug" value="$(arg debug)" />
      <arg name="paused" value="$(arg paused)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="verbose" value="$(arg verbose)"/>
  	</include>
  	
	<!-- Define more env variables (for an unknown reason, defining those parmeters before the world start does not work ) -->
 	<param name="spawnX" value="0.0"/>
 	<param name="spawnY" value="0.0"/>
 	<param name="spawnZ" value="0.1"/>

	<!-- Start the drone and its associated controller -->
 	<group ns="$(arg mav_name)">        
    	<include file="$(find avoidance_benchmark)/modifiedFromRotorS/spawn_mav.launch">
          	<arg name="mav_name" value="$(arg mav_name)" />
          	<arg name="model" value="$(find avoidance_benchmark)/modifiedFromRotorS/$(arg mav_name)_base.xacro" />
         	<arg name="enable_logging" value="$(arg enable_logging)" />
        	<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
        	<arg name="log_file" value="$(arg log_file)"/>
        	<arg name="x" value="0.0"/>
        	<arg name="y" value="0.0"/>
        	<arg name="z" value="0.1"/>
        	<arg name="perfect_sensing" value="$(arg perfect_sensing)"/>
      	</include>
      
        <!-- TF broadcasters in order to have a Tf on the drone and on the camera -->
      	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> 

        <!-- Control modalities -->
        <!-- Direct control using /mav_name/command/motor_speed -->
        <!-- Control using the following attitude controller using mav_name/command/roll_pitch_yawrate_thrust -->
      	<node name="attitude_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
          	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name).yaml" />
          	<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
          	<remap from="odometry" to="ground_truth/odometry" />
            <remap from="command/motor_speed" to="command/motor_speed_from_rpyrt" />
        </node>
		
		<!-- And control using a trajectory or a pose using the lee_position_controller_node and either of the following topics /mav_name/command/pose or /mav_name/command/trajectory -->
        <node name="position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
          	<rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
          	<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
          	<remap from="odometry" to="ground_truth/odometry" />
            <remap from="command/motor_speed" to="command/motor_speed_from_leepos" />
        </node>	
    
        <node pkg="topic_tools" type="mux" name="motor_speed_mux" output="screen"
            args="command/motor_speed command/motor_speed_from_leepos command/motor_speed_direct command/motor_speed_from_rpyrt" >
		</node>
  	</group>
</launch>
