<?xml version="1.0"?>
<launch>
    <env name="PX4_HOME_LAT" value="45.193100"/>
    <env name="PX4_HOME_LON" value="5.763788"/>
    <env name="PX4_HOME_ALT" value="0"/>

    
    <!-- MAVROS posix SITL environment launch script -->
    <!-- launches MAVROS, PX4 SITL, Gazebo environment, and spawns vehicle -->
    <!-- vehicle pose -->
    <arg name="x" default="10"/>
    <arg name="y" default="40"/>
    <arg name="z" default="242.008"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="iris"/>
    <arg name="extension" default="_realsense_d435"/>
    <arg name="world_name" default="forest0"/>
    <arg name="world" default="$(find avoidance_benchmark)/gazebo/worlds/$(arg world_name).world"/>
    <arg name="sdf" default="$(find avoidance_benchmark)/gazebo/models/$(arg vehicle)$(arg extension)/$(arg vehicle)$(arg extension).sdf"/>
    <!--<arg name="sdf" default="$(find mavlink_sitl_gazebo)/models/$(arg vehicle)/$(arg vehicle).sdf"/>-->
    <!-- gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="true"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    <!-- MAVROS configs -->
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <arg name="respawn_mavros" default="false"/>
    <!-- PX4 configs -->
    <arg name="interactive" default="false"/>
    <!-- PX4 SITL and Gazebo -->
    <include file="$(find px4)/launch/posix_sitl.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="R" value="$(arg R)"/>
        <arg name="P" value="$(arg P)"/>
        <arg name="Y" value="$(arg Y)"/>
        <arg name="world" value="$(arg world)"/>
        <arg name="vehicle" value="$(arg vehicle)"/>
        <arg name="sdf" value="$(arg sdf)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="interactive" value="$(arg interactive)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>
    <!-- MAVROS -->
    <include file="$(find mavros)/launch/px4.launch">
        <!-- GCS link is provided by SITL -->
        <arg name="gcs_url" value=""/>
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="respawn_mavros" value="$(arg respawn_mavros)"/>
    </include>
    
    <node pkg="avoidance_benchmark" type="odom2posetwist.py" name="odom2posetwist" output="screen">
        <remap from="odom" to="/odom_gt" />
        <remap from="pose" to="/mavros/vision_pose/pose" />
        <!--<remap from="pose_cov" to="/mavros/vision_pose/pose_cov" />-->
        <remap from="speed_twist_cov" to="/mavros/vision_speed/speed_twist_cov" />
    </node>

    <!-- Multi mux to switch between between the commands providers -->
    <arg name="mux_topic_list" default="[setpoint_accel/accel,setpoint_attitude/cmd_vel,setpoint_attitude/thrust,setpoint_position/global,setpoint_position/global_to_local,setpoint_position/local,setpoint_raw/attitude,setpoint_raw/global,setpoint_raw/local,setpoint_raw/target_attitude,setpoint_raw/target_global,setpoint_raw/target_local,setpoint_trajectory/desired,setpoint_trajectory/local,setpoint_velocity/cmd_vel,setpoint_velocity/cmd_vel_unstamped]"/>
    <node pkg="avoidance_benchmark" type="multi_mux.py" name="command_mux" >
      <rosparam param="output_topics" subst_value="True">$(arg mux_topic_list)</rosparam> 
      <param name="output_prefix" value="/mavros/"/>
      <param name="input1_prefix" value="benchmark_manager"/>
      <param name="input2_prefix" value="avoidance_controller"/>
      <remap from="select" to="command_mux/select" />
    </node>
		
    <!-- Add the noisy depth sensor -->
    <node name="noisy_realsense" pkg="avoidance_benchmark" type="noisy_realsense" output="screen">
       	<remap from="raw_realsense" to="realsense_plugin/camera/depth/image_raw" />
       	<remap from="perfect_realsense" to="realsense_plugin/camera/depth/perfect_realsense" />
       	<remap from="noisy_realsense" to="realsense_plugin/camera/depth/noisy_realsense" />
    </node>

    <!-- camera transform publisher-->
    <node name="tf_color" pkg="tf" type="static_transform_publisher" args="0.1 0.015 0 -1.571 0 -1.571 base_link color 50"/>

</launch>
